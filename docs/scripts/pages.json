[{"name":"abstract class AbstractPivotIterator<out E, P : Comparable<P>, out V>(revertible: RevertibleIterator<E, P>, init: (P) -> V) : PivotIterator<E, P, V> , RevertibleIterator<E, P> ","description":"io.github.aeckar.collections.AbstractPivotIterator","location":"core/io.github.aeckar.collections/-abstract-pivot-iterator/index.html","searchKeys":["AbstractPivotIterator","abstract class AbstractPivotIterator<out E, P : Comparable<P>, out V>(revertible: RevertibleIterator<E, P>, init: (P) -> V) : PivotIterator<E, P, V> , RevertibleIterator<E, P> ","io.github.aeckar.collections.AbstractPivotIterator"]},{"name":"abstract class IndexableIterator<out T> : Iterator<T> ","description":"io.github.aeckar.collections.IndexableIterator","location":"core/io.github.aeckar.collections/-indexable-iterator/index.html","searchKeys":["IndexableIterator","abstract class IndexableIterator<out T> : Iterator<T> ","io.github.aeckar.collections.IndexableIterator"]},{"name":"abstract class ListNode<Self : ListNode<Self>> : Iterable<Self> ","description":"io.github.aeckar.collections.ListNode","location":"core/io.github.aeckar.collections/-list-node/index.html","searchKeys":["ListNode","abstract class ListNode<Self : ListNode<Self>> : Iterable<Self> ","io.github.aeckar.collections.ListNode"]},{"name":"abstract fun advance(places: Int)","description":"io.github.aeckar.collections.RevertibleIterator.advance","location":"core/io.github.aeckar.collections/-revertible-iterator/advance.html","searchKeys":["advance","abstract fun advance(places: Int)","io.github.aeckar.collections.RevertibleIterator.advance"]},{"name":"abstract fun count(element: E): Int","description":"io.github.aeckar.collections.MultiSet.count","location":"core/io.github.aeckar.collections/-multi-set/count.html","searchKeys":["count","abstract fun count(element: E): Int","io.github.aeckar.collections.MultiSet.count"]},{"name":"abstract fun here(): V","description":"io.github.aeckar.collections.PivotIterator.here","location":"core/io.github.aeckar.collections/-pivot-iterator/here.html","searchKeys":["here","abstract fun here(): V","io.github.aeckar.collections.PivotIterator.here"]},{"name":"abstract fun nextChar(): Char","description":"io.github.aeckar.collections.CharIterator.nextChar","location":"core/io.github.aeckar.collections/-char-iterator/next-char.html","searchKeys":["nextChar","abstract fun nextChar(): Char","io.github.aeckar.collections.CharIterator.nextChar"]},{"name":"abstract fun peek(): E","description":"io.github.aeckar.collections.RevertibleIterator.peek","location":"core/io.github.aeckar.collections/-revertible-iterator/peek.html","searchKeys":["peek","abstract fun peek(): E","io.github.aeckar.collections.RevertibleIterator.peek"]},{"name":"abstract fun peekChar(): Char","description":"io.github.aeckar.collections.CharRevertibleIterator.peekChar","location":"core/io.github.aeckar.collections/-char-revertible-iterator/peek-char.html","searchKeys":["peekChar","abstract fun peekChar(): Char","io.github.aeckar.collections.CharRevertibleIterator.peekChar"]},{"name":"abstract fun pivots(): List<Pivot<P, V>>","description":"io.github.aeckar.collections.PivotIterator.pivots","location":"core/io.github.aeckar.collections/-pivot-iterator/pivots.html","searchKeys":["pivots","abstract fun pivots(): List<Pivot<P, V>>","io.github.aeckar.collections.PivotIterator.pivots"]},{"name":"abstract fun position(): P","description":"io.github.aeckar.collections.RevertibleIterator.position","location":"core/io.github.aeckar.collections/-revertible-iterator/position.html","searchKeys":["position","abstract fun position(): P","io.github.aeckar.collections.RevertibleIterator.position"]},{"name":"abstract fun remove()","description":"io.github.aeckar.collections.Removable.remove","location":"core/io.github.aeckar.collections/-removable/remove.html","searchKeys":["remove","abstract fun remove()","io.github.aeckar.collections.Removable.remove"]},{"name":"abstract fun removeSave()","description":"io.github.aeckar.collections.RevertibleIterator.removeSave","location":"core/io.github.aeckar.collections/-revertible-iterator/remove-save.html","searchKeys":["removeSave","abstract fun removeSave()","io.github.aeckar.collections.RevertibleIterator.removeSave"]},{"name":"abstract fun revert()","description":"io.github.aeckar.collections.RevertibleIterator.revert","location":"core/io.github.aeckar.collections/-revertible-iterator/revert.html","searchKeys":["revert","abstract fun revert()","io.github.aeckar.collections.RevertibleIterator.revert"]},{"name":"abstract fun save()","description":"io.github.aeckar.collections.RevertibleIterator.save","location":"core/io.github.aeckar.collections/-revertible-iterator/save.html","searchKeys":["save","abstract fun save()","io.github.aeckar.collections.RevertibleIterator.save"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"io.github.aeckar.collections.RevertibleIterator.equals","location":"core/io.github.aeckar.collections/-revertible-iterator/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","io.github.aeckar.collections.RevertibleIterator.equals"]},{"name":"abstract operator override fun iterator(): MutableIterator<T>","description":"io.github.aeckar.collections.MutableIterable.iterator","location":"core/io.github.aeckar.collections/-mutable-iterable/iterator.html","searchKeys":["iterator","abstract operator override fun iterator(): MutableIterator<T>","io.github.aeckar.collections.MutableIterable.iterator"]},{"name":"abstract operator override fun next(): Char","description":"io.github.aeckar.collections.CharIterator.next","location":"core/io.github.aeckar.collections/-char-iterator/next.html","searchKeys":["next","abstract operator override fun next(): Char","io.github.aeckar.collections.CharIterator.next"]},{"name":"abstract override fun subList(fromIndex: Int, toIndex: Int): ReadOnlyList<E>","description":"io.github.aeckar.collections.ReadOnlyList.subList","location":"core/io.github.aeckar.collections/-read-only-list/sub-list.html","searchKeys":["subList","abstract override fun subList(fromIndex: Int, toIndex: Int): ReadOnlyList<E>","io.github.aeckar.collections.ReadOnlyList.subList"]},{"name":"abstract val size: Int","description":"io.github.aeckar.collections.PrimitiveList.size","location":"core/io.github.aeckar.collections/-primitive-list/size.html","searchKeys":["size","abstract val size: Int","io.github.aeckar.collections.PrimitiveList.size"]},{"name":"abstract val value: V","description":"io.github.aeckar.collections.ValueNode.value","location":"core/io.github.aeckar.collections/-value-node/value.html","searchKeys":["value","abstract val value: V","io.github.aeckar.collections.ValueNode.value"]},{"name":"class BooleanList : PrimitiveList, Iterable<Boolean> ","description":"io.github.aeckar.collections.BooleanList","location":"core/io.github.aeckar.collections/-boolean-list/index.html","searchKeys":["BooleanList","class BooleanList : PrimitiveList, Iterable<Boolean> ","io.github.aeckar.collections.BooleanList"]},{"name":"class DoubleList : PrimitiveList, Iterable<Double> ","description":"io.github.aeckar.collections.DoubleList","location":"core/io.github.aeckar.collections/-double-list/index.html","searchKeys":["DoubleList","class DoubleList : PrimitiveList, Iterable<Double> ","io.github.aeckar.collections.DoubleList"]},{"name":"class HashMultiSet<E>(initialCapacity: Int = DEFAULT_SIZE, loadFactor: Double = DEFAULT_LOAD_FACTOR) : AbstractSet<E> , MutableMultiSet<E> ","description":"io.github.aeckar.collections.HashMultiSet","location":"core/io.github.aeckar.collections/-hash-multi-set/index.html","searchKeys":["HashMultiSet","class HashMultiSet<E>(initialCapacity: Int = DEFAULT_SIZE, loadFactor: Double = DEFAULT_LOAD_FACTOR) : AbstractSet<E> , MutableMultiSet<E> ","io.github.aeckar.collections.HashMultiSet"]},{"name":"class IntList : PrimitiveList, Iterable<Int> ","description":"io.github.aeckar.collections.IntList","location":"core/io.github.aeckar.collections/-int-list/index.html","searchKeys":["IntList","class IntList : PrimitiveList, Iterable<Int> ","io.github.aeckar.collections.IntList"]},{"name":"class LongList : PrimitiveList, Iterable<Long> ","description":"io.github.aeckar.collections.LongList","location":"core/io.github.aeckar.collections/-long-list/index.html","searchKeys":["LongList","class LongList : PrimitiveList, Iterable<Long> ","io.github.aeckar.collections.LongList"]},{"name":"constructor()","description":"io.github.aeckar.collections.BooleanList.BooleanList","location":"core/io.github.aeckar.collections/-boolean-list/-boolean-list.html","searchKeys":["BooleanList","constructor()","io.github.aeckar.collections.BooleanList.BooleanList"]},{"name":"constructor()","description":"io.github.aeckar.collections.DoubleList.DoubleList","location":"core/io.github.aeckar.collections/-double-list/-double-list.html","searchKeys":["DoubleList","constructor()","io.github.aeckar.collections.DoubleList.DoubleList"]},{"name":"constructor()","description":"io.github.aeckar.collections.IndexableIterator.IndexableIterator","location":"core/io.github.aeckar.collections/-indexable-iterator/-indexable-iterator.html","searchKeys":["IndexableIterator","constructor()","io.github.aeckar.collections.IndexableIterator.IndexableIterator"]},{"name":"constructor()","description":"io.github.aeckar.collections.IntList.IntList","location":"core/io.github.aeckar.collections/-int-list/-int-list.html","searchKeys":["IntList","constructor()","io.github.aeckar.collections.IntList.IntList"]},{"name":"constructor()","description":"io.github.aeckar.collections.ListNode.ListNode","location":"core/io.github.aeckar.collections/-list-node/-list-node.html","searchKeys":["ListNode","constructor()","io.github.aeckar.collections.ListNode.ListNode"]},{"name":"constructor()","description":"io.github.aeckar.collections.LongList.LongList","location":"core/io.github.aeckar.collections/-long-list/-long-list.html","searchKeys":["LongList","constructor()","io.github.aeckar.collections.LongList.LongList"]},{"name":"constructor(chars: String)","description":"io.github.aeckar.collections.TreeNode.Style.Style","location":"core/io.github.aeckar.collections/-tree-node/-style/-style.html","searchKeys":["Style","constructor(chars: String)","io.github.aeckar.collections.TreeNode.Style.Style"]},{"name":"constructor(initialCapacity: Int = DEFAULT_SIZE, loadFactor: Double = DEFAULT_LOAD_FACTOR)","description":"io.github.aeckar.collections.HashMultiSet.HashMultiSet","location":"core/io.github.aeckar.collections/-hash-multi-set/-hash-multi-set.html","searchKeys":["HashMultiSet","constructor(initialCapacity: Int = DEFAULT_SIZE, loadFactor: Double = DEFAULT_LOAD_FACTOR)","io.github.aeckar.collections.HashMultiSet.HashMultiSet"]},{"name":"constructor(position: P, value: V)","description":"io.github.aeckar.collections.Pivot.Pivot","location":"core/io.github.aeckar.collections/-pivot/-pivot.html","searchKeys":["Pivot","constructor(position: P, value: V)","io.github.aeckar.collections.Pivot.Pivot"]},{"name":"constructor(revertible: RevertibleIterator<E, P>, init: (P) -> V)","description":"io.github.aeckar.collections.AbstractPivotIterator.AbstractPivotIterator","location":"core/io.github.aeckar.collections/-abstract-pivot-iterator/-abstract-pivot-iterator.html","searchKeys":["AbstractPivotIterator","constructor(revertible: RevertibleIterator<E, P>, init: (P) -> V)","io.github.aeckar.collections.AbstractPivotIterator.AbstractPivotIterator"]},{"name":"constructor(value: V)","description":"io.github.aeckar.collections.ValueListNode.ValueListNode","location":"core/io.github.aeckar.collections/-value-list-node/-value-list-node.html","searchKeys":["ValueListNode","constructor(value: V)","io.github.aeckar.collections.ValueListNode.ValueListNode"]},{"name":"constructor(vertical: Char, horizontal: Char, turnstile: Char, corner: Char)","description":"io.github.aeckar.collections.TreeNode.Style.Style","location":"core/io.github.aeckar.collections/-tree-node/-style/-style.html","searchKeys":["Style","constructor(vertical: Char, horizontal: Char, turnstile: Char, corner: Char)","io.github.aeckar.collections.TreeNode.Style.Style"]},{"name":"data class DataTreeNode<out V> : ValueTreeNode<V> ","description":"io.github.aeckar.collections.DataTreeNode","location":"core/io.github.aeckar.collections/-data-tree-node/index.html","searchKeys":["DataTreeNode","data class DataTreeNode<out V> : ValueTreeNode<V> ","io.github.aeckar.collections.DataTreeNode"]},{"name":"data class Pivot<P : Comparable<P>, out V>(val position: P, val value: V) : ListNode<Pivot<P, V>> , ValueNode<V> ","description":"io.github.aeckar.collections.Pivot","location":"core/io.github.aeckar.collections/-pivot/index.html","searchKeys":["Pivot","data class Pivot<P : Comparable<P>, out V>(val position: P, val value: V) : ListNode<Pivot<P, V>> , ValueNode<V> ","io.github.aeckar.collections.Pivot"]},{"name":"data class Style(val vertical: Char, val horizontal: Char, val turnstile: Char, val corner: Char)","description":"io.github.aeckar.collections.TreeNode.Style","location":"core/io.github.aeckar.collections/-tree-node/-style/index.html","searchKeys":["Style","data class Style(val vertical: Char, val horizontal: Char, val turnstile: Char, val corner: Char)","io.github.aeckar.collections.TreeNode.Style"]},{"name":"data class ValueListNode<out V>(val value: V) : ListNode<ValueListNode<V>> , ValueNode<V> ","description":"io.github.aeckar.collections.ValueListNode","location":"core/io.github.aeckar.collections/-value-list-node/index.html","searchKeys":["ValueListNode","data class ValueListNode<out V>(val value: V) : ListNode<ValueListNode<V>> , ValueNode<V> ","io.github.aeckar.collections.ValueListNode"]},{"name":"fun <E, H> List<E>.pivotIterator(init: (Int) -> H): PivotIterator<E, Int, H>","description":"io.github.aeckar.collections.pivotIterator","location":"core/io.github.aeckar.collections/pivot-iterator.html","searchKeys":["pivotIterator","fun <E, H> List<E>.pivotIterator(init: (Int) -> H): PivotIterator<E, Int, H>","io.github.aeckar.collections.pivotIterator"]},{"name":"fun <E> List<E>.readOnly(): ReadOnlyList<E>","description":"io.github.aeckar.collections.readOnly","location":"core/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun <E> List<E>.readOnly(): ReadOnlyList<E>","io.github.aeckar.collections.readOnly"]},{"name":"fun <E> List<E>.revertibleIterator(): RevertibleIterator<E, Int>","description":"io.github.aeckar.collections.revertibleIterator","location":"core/io.github.aeckar.collections/revertible-iterator.html","searchKeys":["revertibleIterator","fun <E> List<E>.revertibleIterator(): RevertibleIterator<E, Int>","io.github.aeckar.collections.revertibleIterator"]},{"name":"fun <E> MultiSet<E>.readOnly(): ReadOnlyMultiSet<E>","description":"io.github.aeckar.collections.readOnly","location":"core/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun <E> MultiSet<E>.readOnly(): ReadOnlyMultiSet<E>","io.github.aeckar.collections.readOnly"]},{"name":"fun <E> Set<E>.readOnly(): ReadOnlySet<E>","description":"io.github.aeckar.collections.readOnly","location":"core/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun <E> Set<E>.readOnly(): ReadOnlySet<E>","io.github.aeckar.collections.readOnly"]},{"name":"fun <E> buildMultiSet(builder: MutableMultiSet<E>.() -> Unit): ReadOnlyMultiSet<E>","description":"io.github.aeckar.collections.buildMultiSet","location":"core/io.github.aeckar.collections/build-multi-set.html","searchKeys":["buildMultiSet","fun <E> buildMultiSet(builder: MutableMultiSet<E>.() -> Unit): ReadOnlyMultiSet<E>","io.github.aeckar.collections.buildMultiSet"]},{"name":"fun <E> emptyMultiSet(): ReadOnlyMultiSet<E>","description":"io.github.aeckar.collections.emptyMultiSet","location":"core/io.github.aeckar.collections/empty-multi-set.html","searchKeys":["emptyMultiSet","fun <E> emptyMultiSet(): ReadOnlyMultiSet<E>","io.github.aeckar.collections.emptyMultiSet"]},{"name":"fun <E> multiSetOf(): ReadOnlyMultiSet<E>","description":"io.github.aeckar.collections.multiSetOf","location":"core/io.github.aeckar.collections/multi-set-of.html","searchKeys":["multiSetOf","fun <E> multiSetOf(): ReadOnlyMultiSet<E>","io.github.aeckar.collections.multiSetOf"]},{"name":"fun <E> multiSetOf(vararg elements: E): ReadOnlyMultiSet<E>","description":"io.github.aeckar.collections.multiSetOf","location":"core/io.github.aeckar.collections/multi-set-of.html","searchKeys":["multiSetOf","fun <E> multiSetOf(vararg elements: E): ReadOnlyMultiSet<E>","io.github.aeckar.collections.multiSetOf"]},{"name":"fun <E> mutableMultiSetOf(): MutableMultiSet<E>","description":"io.github.aeckar.collections.mutableMultiSetOf","location":"core/io.github.aeckar.collections/mutable-multi-set-of.html","searchKeys":["mutableMultiSetOf","fun <E> mutableMultiSetOf(): MutableMultiSet<E>","io.github.aeckar.collections.mutableMultiSetOf"]},{"name":"fun <E> mutableMultiSetOf(vararg elements: E): MutableMultiSet<E>","description":"io.github.aeckar.collections.mutableMultiSetOf","location":"core/io.github.aeckar.collections/mutable-multi-set-of.html","searchKeys":["mutableMultiSetOf","fun <E> mutableMultiSetOf(vararg elements: E): MutableMultiSet<E>","io.github.aeckar.collections.mutableMultiSetOf"]},{"name":"fun <H> String.pivotIterator(init: (Int) -> H): CharPivotIterator<Int, H>","description":"io.github.aeckar.collections.pivotIterator","location":"core/io.github.aeckar.collections/pivot-iterator.html","searchKeys":["pivotIterator","fun <H> String.pivotIterator(init: (Int) -> H): CharPivotIterator<Int, H>","io.github.aeckar.collections.pivotIterator"]},{"name":"fun <K, V> Map<K, V>.readOnly(): ReadOnlyMap<K, V>","description":"io.github.aeckar.collections.readOnly","location":"core/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun <K, V> Map<K, V>.readOnly(): ReadOnlyMap<K, V>","io.github.aeckar.collections.readOnly"]},{"name":"fun <P : Comparable<P>, V> pivots(): (Pair<P, V>) -> Pivot<P, V>","description":"io.github.aeckar.collections.pivots","location":"core/io.github.aeckar.collections/pivots.html","searchKeys":["pivots","fun <P : Comparable<P>, V> pivots(): (Pair<P, V>) -> Pivot<P, V>","io.github.aeckar.collections.pivots"]},{"name":"fun <Self : ListNode<Self>> Self?.reversed(): Iterable<Self>","description":"io.github.aeckar.collections.reversed","location":"core/io.github.aeckar.collections/reversed.html","searchKeys":["reversed","fun <Self : ListNode<Self>> Self?.reversed(): Iterable<Self>","io.github.aeckar.collections.reversed"]},{"name":"fun <Self : ListNode<Self>> Self?.toList(): List<Self>","description":"io.github.aeckar.collections.toList","location":"core/io.github.aeckar.collections/to-list.html","searchKeys":["toList","fun <Self : ListNode<Self>> Self?.toList(): List<Self>","io.github.aeckar.collections.toList"]},{"name":"fun <V, P : Comparable<P>> Pivot<P, V>.getOrInsert(position: P, lazyValue: () -> V): Pivot<P, V>","description":"io.github.aeckar.collections.getOrInsert","location":"core/io.github.aeckar.collections/get-or-insert.html","searchKeys":["getOrInsert","fun <V, P : Comparable<P>> Pivot<P, V>.getOrInsert(position: P, lazyValue: () -> V): Pivot<P, V>","io.github.aeckar.collections.getOrInsert"]},{"name":"fun <V> DataTreeNode<V>.readOnly(): ReadOnlyDataTreeNode<V>","description":"io.github.aeckar.collections.readOnly","location":"core/io.github.aeckar.collections/read-only.html","searchKeys":["readOnly","fun <V> DataTreeNode<V>.readOnly(): ReadOnlyDataTreeNode<V>","io.github.aeckar.collections.readOnly"]},{"name":"fun <V> treeNodeOf(value: V): DataTreeNode<V>","description":"io.github.aeckar.collections.treeNodeOf","location":"core/io.github.aeckar.collections/tree-node-of.html","searchKeys":["treeNodeOf","fun <V> treeNodeOf(value: V): DataTreeNode<V>","io.github.aeckar.collections.treeNodeOf"]},{"name":"fun <V> values(): (V) -> ValueListNode<V>","description":"io.github.aeckar.collections.values","location":"core/io.github.aeckar.collections/values.html","searchKeys":["values","fun <V> values(): (V) -> ValueListNode<V>","io.github.aeckar.collections.values"]},{"name":"fun MutableIterator<*>.asRemovable(): Removable","description":"io.github.aeckar.collections.asRemovable","location":"core/io.github.aeckar.collections/as-removable.html","searchKeys":["asRemovable","fun MutableIterator<*>.asRemovable(): Removable","io.github.aeckar.collections.asRemovable"]},{"name":"fun String.revertibleIterator(): CharRevertibleIterator<Int>","description":"io.github.aeckar.collections.revertibleIterator","location":"core/io.github.aeckar.collections/revertible-iterator.html","searchKeys":["revertibleIterator","fun String.revertibleIterator(): CharRevertibleIterator<Int>","io.github.aeckar.collections.revertibleIterator"]},{"name":"fun head(): Self","description":"io.github.aeckar.collections.ListNode.head","location":"core/io.github.aeckar.collections/-list-node/head.html","searchKeys":["head","fun head(): Self","io.github.aeckar.collections.ListNode.head"]},{"name":"fun insertAfter(node: Self)","description":"io.github.aeckar.collections.ListNode.insertAfter","location":"core/io.github.aeckar.collections/-list-node/insert-after.html","searchKeys":["insertAfter","fun insertAfter(node: Self)","io.github.aeckar.collections.ListNode.insertAfter"]},{"name":"fun insertBefore(node: Self)","description":"io.github.aeckar.collections.ListNode.insertBefore","location":"core/io.github.aeckar.collections/-list-node/insert-before.html","searchKeys":["insertBefore","fun insertBefore(node: Self)","io.github.aeckar.collections.ListNode.insertBefore"]},{"name":"fun interface Removable","description":"io.github.aeckar.collections.Removable","location":"core/io.github.aeckar.collections/-removable/index.html","searchKeys":["Removable","fun interface Removable","io.github.aeckar.collections.Removable"]},{"name":"fun last(): Self","description":"io.github.aeckar.collections.ListNode.last","location":"core/io.github.aeckar.collections/-list-node/last.html","searchKeys":["last","fun last(): Self","io.github.aeckar.collections.ListNode.last"]},{"name":"fun next(): Self","description":"io.github.aeckar.collections.ListNode.next","location":"core/io.github.aeckar.collections/-list-node/next.html","searchKeys":["next","fun next(): Self","io.github.aeckar.collections.ListNode.next"]},{"name":"fun removeLast(): Boolean","description":"io.github.aeckar.collections.BooleanList.removeLast","location":"core/io.github.aeckar.collections/-boolean-list/remove-last.html","searchKeys":["removeLast","fun removeLast(): Boolean","io.github.aeckar.collections.BooleanList.removeLast"]},{"name":"fun removeLast(): Double","description":"io.github.aeckar.collections.DoubleList.removeLast","location":"core/io.github.aeckar.collections/-double-list/remove-last.html","searchKeys":["removeLast","fun removeLast(): Double","io.github.aeckar.collections.DoubleList.removeLast"]},{"name":"fun removeLast(): Int","description":"io.github.aeckar.collections.IntList.removeLast","location":"core/io.github.aeckar.collections/-int-list/remove-last.html","searchKeys":["removeLast","fun removeLast(): Int","io.github.aeckar.collections.IntList.removeLast"]},{"name":"fun removeLast(): Long","description":"io.github.aeckar.collections.LongList.removeLast","location":"core/io.github.aeckar.collections/-long-list/remove-last.html","searchKeys":["removeLast","fun removeLast(): Long","io.github.aeckar.collections.LongList.removeLast"]},{"name":"fun tail(): Self","description":"io.github.aeckar.collections.ListNode.tail","location":"core/io.github.aeckar.collections/-list-node/tail.html","searchKeys":["tail","fun tail(): Self","io.github.aeckar.collections.ListNode.tail"]},{"name":"infix inline fun Boolean.implies(other: () -> Unit): Boolean","description":"io.github.aeckar.collections.implies","location":"core/io.github.aeckar.collections/implies.html","searchKeys":["implies","infix inline fun Boolean.implies(other: () -> Unit): Boolean","io.github.aeckar.collections.implies"]},{"name":"inline fun <T, Self : ListNode<Self>> link(linker: (T) -> Self, first: T, vararg others: T): Self","description":"io.github.aeckar.collections.link","location":"core/io.github.aeckar.collections/link.html","searchKeys":["link","inline fun <T, Self : ListNode<Self>> link(linker: (T) -> Self, first: T, vararg others: T): Self","io.github.aeckar.collections.link"]},{"name":"inline fun <T> Iterable<T>.andEach(transform: (T) -> Boolean): Boolean","description":"io.github.aeckar.collections.andEach","location":"core/io.github.aeckar.collections/and-each.html","searchKeys":["andEach","inline fun <T> Iterable<T>.andEach(transform: (T) -> Boolean): Boolean","io.github.aeckar.collections.andEach"]},{"name":"inline fun <T> Iterable<T>.orEach(transform: (T) -> Boolean): Boolean","description":"io.github.aeckar.collections.orEach","location":"core/io.github.aeckar.collections/or-each.html","searchKeys":["orEach","inline fun <T> Iterable<T>.orEach(transform: (T) -> Boolean): Boolean","io.github.aeckar.collections.orEach"]},{"name":"inline fun <T> MutableIterable<T>.mutableAndEach(transform: Removable.(T) -> Boolean): Boolean","description":"io.github.aeckar.collections.mutableAndEach","location":"core/io.github.aeckar.collections/mutable-and-each.html","searchKeys":["mutableAndEach","inline fun <T> MutableIterable<T>.mutableAndEach(transform: Removable.(T) -> Boolean): Boolean","io.github.aeckar.collections.mutableAndEach"]},{"name":"inline fun <T> MutableIterable<T>.mutableOrEach(transform: Removable.(T) -> Boolean): Boolean","description":"io.github.aeckar.collections.mutableOrEach","location":"core/io.github.aeckar.collections/mutable-or-each.html","searchKeys":["mutableOrEach","inline fun <T> MutableIterable<T>.mutableOrEach(transform: Removable.(T) -> Boolean): Boolean","io.github.aeckar.collections.mutableOrEach"]},{"name":"inline fun <V> buildTree(rootValue: V, builder: DataTreeNode<V>.() -> Unit): ReadOnlyDataTreeNode<V>","description":"io.github.aeckar.collections.buildTree","location":"core/io.github.aeckar.collections/build-tree.html","searchKeys":["buildTree","inline fun <V> buildTree(rootValue: V, builder: DataTreeNode<V>.() -> Unit): ReadOnlyDataTreeNode<V>","io.github.aeckar.collections.buildTree"]},{"name":"inline fun backtrace(predicate: (Self) -> Boolean): Self","description":"io.github.aeckar.collections.ListNode.backtrace","location":"core/io.github.aeckar.collections/-list-node/backtrace.html","searchKeys":["backtrace","inline fun backtrace(predicate: (Self) -> Boolean): Self","io.github.aeckar.collections.ListNode.backtrace"]},{"name":"inline fun seek(predicate: (Self) -> Boolean): Self","description":"io.github.aeckar.collections.ListNode.seek","location":"core/io.github.aeckar.collections/-list-node/seek.html","searchKeys":["seek","inline fun seek(predicate: (Self) -> Boolean): Self","io.github.aeckar.collections.ListNode.seek"]},{"name":"interface CharIterator : Iterator<Char> ","description":"io.github.aeckar.collections.CharIterator","location":"core/io.github.aeckar.collections/-char-iterator/index.html","searchKeys":["CharIterator","interface CharIterator : Iterator<Char> ","io.github.aeckar.collections.CharIterator"]},{"name":"interface CharPivotIterator<P : Comparable<P>, out V> : PivotIterator<Char, P, V> , CharRevertibleIterator<P> ","description":"io.github.aeckar.collections.CharPivotIterator","location":"core/io.github.aeckar.collections/-char-pivot-iterator/index.html","searchKeys":["CharPivotIterator","interface CharPivotIterator<P : Comparable<P>, out V> : PivotIterator<Char, P, V> , CharRevertibleIterator<P> ","io.github.aeckar.collections.CharPivotIterator"]},{"name":"interface CharRevertibleIterator<out P> : RevertibleIterator<Char, P> , CharIterator","description":"io.github.aeckar.collections.CharRevertibleIterator","location":"core/io.github.aeckar.collections/-char-revertible-iterator/index.html","searchKeys":["CharRevertibleIterator","interface CharRevertibleIterator<out P> : RevertibleIterator<Char, P> , CharIterator","io.github.aeckar.collections.CharRevertibleIterator"]},{"name":"interface MultiSet<E> : Set<E> ","description":"io.github.aeckar.collections.MultiSet","location":"core/io.github.aeckar.collections/-multi-set/index.html","searchKeys":["MultiSet","interface MultiSet<E> : Set<E> ","io.github.aeckar.collections.MultiSet"]},{"name":"interface MutableIterable<T> : Iterable<T> ","description":"io.github.aeckar.collections.MutableIterable","location":"core/io.github.aeckar.collections/-mutable-iterable/index.html","searchKeys":["MutableIterable","interface MutableIterable<T> : Iterable<T> ","io.github.aeckar.collections.MutableIterable"]},{"name":"interface MutableMultiSet<E> : MultiSet<E> , MutableSet<E> , MutableIterable<E> ","description":"io.github.aeckar.collections.MutableMultiSet","location":"core/io.github.aeckar.collections/-mutable-multi-set/index.html","searchKeys":["MutableMultiSet","interface MutableMultiSet<E> : MultiSet<E> , MutableSet<E> , MutableIterable<E> ","io.github.aeckar.collections.MutableMultiSet"]},{"name":"interface PivotIterator<out E, P : Comparable<P>, out V> : RevertibleIterator<E, P> ","description":"io.github.aeckar.collections.PivotIterator","location":"core/io.github.aeckar.collections/-pivot-iterator/index.html","searchKeys":["PivotIterator","interface PivotIterator<out E, P : Comparable<P>, out V> : RevertibleIterator<E, P> ","io.github.aeckar.collections.PivotIterator"]},{"name":"interface PrimitiveList","description":"io.github.aeckar.collections.PrimitiveList","location":"core/io.github.aeckar.collections/-primitive-list/index.html","searchKeys":["PrimitiveList","interface PrimitiveList","io.github.aeckar.collections.PrimitiveList"]},{"name":"interface RevertibleIterator<out E, out P> : Iterator<E> ","description":"io.github.aeckar.collections.RevertibleIterator","location":"core/io.github.aeckar.collections/-revertible-iterator/index.html","searchKeys":["RevertibleIterator","interface RevertibleIterator<out E, out P> : Iterator<E> ","io.github.aeckar.collections.RevertibleIterator"]},{"name":"interface TreeNode<Self : TreeNode<Self>> : Iterable<Self> ","description":"io.github.aeckar.collections.TreeNode","location":"core/io.github.aeckar.collections/-tree-node/index.html","searchKeys":["TreeNode","interface TreeNode<Self : TreeNode<Self>> : Iterable<Self> ","io.github.aeckar.collections.TreeNode"]},{"name":"interface ValueNode<out V>","description":"io.github.aeckar.collections.ValueNode","location":"core/io.github.aeckar.collections/-value-node/index.html","searchKeys":["ValueNode","interface ValueNode<out V>","io.github.aeckar.collections.ValueNode"]},{"name":"interface ValueTreeNode<out V> : TreeNode<ValueTreeNode<V>> , ValueNode<V> ","description":"io.github.aeckar.collections.ValueTreeNode","location":"core/io.github.aeckar.collections/-value-tree-node/index.html","searchKeys":["ValueTreeNode","interface ValueTreeNode<out V> : TreeNode<ValueTreeNode<V>> , ValueNode<V> ","io.github.aeckar.collections.ValueTreeNode"]},{"name":"object Companion","description":"io.github.aeckar.collections.TreeNode.Companion","location":"core/io.github.aeckar.collections/-tree-node/-companion/index.html","searchKeys":["Companion","object Companion","io.github.aeckar.collections.TreeNode.Companion"]},{"name":"open fun isExhausted(): Boolean","description":"io.github.aeckar.collections.RevertibleIterator.isExhausted","location":"core/io.github.aeckar.collections/-revertible-iterator/is-exhausted.html","searchKeys":["isExhausted","open fun isExhausted(): Boolean","io.github.aeckar.collections.RevertibleIterator.isExhausted"]},{"name":"open fun treeString(lines: TreeNode.Style = UTF_8): String","description":"io.github.aeckar.collections.TreeNode.treeString","location":"core/io.github.aeckar.collections/-tree-node/tree-string.html","searchKeys":["treeString","open fun treeString(lines: TreeNode.Style = UTF_8): String","io.github.aeckar.collections.TreeNode.treeString"]},{"name":"open operator override fun iterator(): BooleanIterator","description":"io.github.aeckar.collections.BooleanList.iterator","location":"core/io.github.aeckar.collections/-boolean-list/iterator.html","searchKeys":["iterator","open operator override fun iterator(): BooleanIterator","io.github.aeckar.collections.BooleanList.iterator"]},{"name":"open operator override fun iterator(): DoubleIterator","description":"io.github.aeckar.collections.DoubleList.iterator","location":"core/io.github.aeckar.collections/-double-list/iterator.html","searchKeys":["iterator","open operator override fun iterator(): DoubleIterator","io.github.aeckar.collections.DoubleList.iterator"]},{"name":"open operator override fun iterator(): IntIterator","description":"io.github.aeckar.collections.IntList.iterator","location":"core/io.github.aeckar.collections/-int-list/iterator.html","searchKeys":["iterator","open operator override fun iterator(): IntIterator","io.github.aeckar.collections.IntList.iterator"]},{"name":"open operator override fun iterator(): Iterator<Self>","description":"io.github.aeckar.collections.ListNode.iterator","location":"core/io.github.aeckar.collections/-list-node/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Self>","io.github.aeckar.collections.ListNode.iterator"]},{"name":"open operator override fun iterator(): Iterator<Self>","description":"io.github.aeckar.collections.TreeNode.iterator","location":"core/io.github.aeckar.collections/-tree-node/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Self>","io.github.aeckar.collections.TreeNode.iterator"]},{"name":"open operator override fun iterator(): LongIterator","description":"io.github.aeckar.collections.LongList.iterator","location":"core/io.github.aeckar.collections/-long-list/iterator.html","searchKeys":["iterator","open operator override fun iterator(): LongIterator","io.github.aeckar.collections.LongList.iterator"]},{"name":"open operator override fun iterator(): MutableIterator<E>","description":"io.github.aeckar.collections.HashMultiSet.iterator","location":"core/io.github.aeckar.collections/-hash-multi-set/iterator.html","searchKeys":["iterator","open operator override fun iterator(): MutableIterator<E>","io.github.aeckar.collections.HashMultiSet.iterator"]},{"name":"open override fun add(element: E): Boolean","description":"io.github.aeckar.collections.HashMultiSet.add","location":"core/io.github.aeckar.collections/-hash-multi-set/add.html","searchKeys":["add","open override fun add(element: E): Boolean","io.github.aeckar.collections.HashMultiSet.add"]},{"name":"open override fun addAll(elements: Collection<E>): Boolean","description":"io.github.aeckar.collections.HashMultiSet.addAll","location":"core/io.github.aeckar.collections/-hash-multi-set/add-all.html","searchKeys":["addAll","open override fun addAll(elements: Collection<E>): Boolean","io.github.aeckar.collections.HashMultiSet.addAll"]},{"name":"open override fun clear()","description":"io.github.aeckar.collections.HashMultiSet.clear","location":"core/io.github.aeckar.collections/-hash-multi-set/clear.html","searchKeys":["clear","open override fun clear()","io.github.aeckar.collections.HashMultiSet.clear"]},{"name":"open override fun count(element: E): Int","description":"io.github.aeckar.collections.HashMultiSet.count","location":"core/io.github.aeckar.collections/-hash-multi-set/count.html","searchKeys":["count","open override fun count(element: E): Int","io.github.aeckar.collections.HashMultiSet.count"]},{"name":"open override fun peek(): Char","description":"io.github.aeckar.collections.CharRevertibleIterator.peek","location":"core/io.github.aeckar.collections/-char-revertible-iterator/peek.html","searchKeys":["peek","open override fun peek(): Char","io.github.aeckar.collections.CharRevertibleIterator.peek"]},{"name":"open override fun remove(element: E): Boolean","description":"io.github.aeckar.collections.HashMultiSet.remove","location":"core/io.github.aeckar.collections/-hash-multi-set/remove.html","searchKeys":["remove","open override fun remove(element: E): Boolean","io.github.aeckar.collections.HashMultiSet.remove"]},{"name":"open override fun removeAll(elements: Collection<E>): Boolean","description":"io.github.aeckar.collections.HashMultiSet.removeAll","location":"core/io.github.aeckar.collections/-hash-multi-set/remove-all.html","searchKeys":["removeAll","open override fun removeAll(elements: Collection<E>): Boolean","io.github.aeckar.collections.HashMultiSet.removeAll"]},{"name":"open override fun retainAll(elements: Collection<E>): Boolean","description":"io.github.aeckar.collections.HashMultiSet.retainAll","location":"core/io.github.aeckar.collections/-hash-multi-set/retain-all.html","searchKeys":["retainAll","open override fun retainAll(elements: Collection<E>): Boolean","io.github.aeckar.collections.HashMultiSet.retainAll"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.BooleanList.toString","location":"core/io.github.aeckar.collections/-boolean-list/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.BooleanList.toString"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.DataTreeNode.toString","location":"core/io.github.aeckar.collections/-data-tree-node/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.DataTreeNode.toString"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.DoubleList.toString","location":"core/io.github.aeckar.collections/-double-list/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.DoubleList.toString"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.IntList.toString","location":"core/io.github.aeckar.collections/-int-list/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.IntList.toString"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.LongList.toString","location":"core/io.github.aeckar.collections/-long-list/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.LongList.toString"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.Pivot.toString","location":"core/io.github.aeckar.collections/-pivot/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.Pivot.toString"]},{"name":"open override fun toString(): String","description":"io.github.aeckar.collections.ValueListNode.toString","location":"core/io.github.aeckar.collections/-value-list-node/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.aeckar.collections.ValueListNode.toString"]},{"name":"open override val children: MutableList<DataTreeNode<V>>","description":"io.github.aeckar.collections.DataTreeNode.children","location":"core/io.github.aeckar.collections/-data-tree-node/children.html","searchKeys":["children","open override val children: MutableList<DataTreeNode<V>>","io.github.aeckar.collections.DataTreeNode.children"]},{"name":"open override val value: V","description":"io.github.aeckar.collections.DataTreeNode.value","location":"core/io.github.aeckar.collections/-data-tree-node/value.html","searchKeys":["value","open override val value: V","io.github.aeckar.collections.DataTreeNode.value"]},{"name":"open override val value: V","description":"io.github.aeckar.collections.Pivot.value","location":"core/io.github.aeckar.collections/-pivot/value.html","searchKeys":["value","open override val value: V","io.github.aeckar.collections.Pivot.value"]},{"name":"open override val value: V","description":"io.github.aeckar.collections.ValueListNode.value","location":"core/io.github.aeckar.collections/-value-list-node/value.html","searchKeys":["value","open override val value: V","io.github.aeckar.collections.ValueListNode.value"]},{"name":"open override var size: Int","description":"io.github.aeckar.collections.BooleanList.size","location":"core/io.github.aeckar.collections/-boolean-list/size.html","searchKeys":["size","open override var size: Int","io.github.aeckar.collections.BooleanList.size"]},{"name":"open override var size: Int","description":"io.github.aeckar.collections.DoubleList.size","location":"core/io.github.aeckar.collections/-double-list/size.html","searchKeys":["size","open override var size: Int","io.github.aeckar.collections.DoubleList.size"]},{"name":"open override var size: Int","description":"io.github.aeckar.collections.HashMultiSet.size","location":"core/io.github.aeckar.collections/-hash-multi-set/size.html","searchKeys":["size","open override var size: Int","io.github.aeckar.collections.HashMultiSet.size"]},{"name":"open override var size: Int","description":"io.github.aeckar.collections.IntList.size","location":"core/io.github.aeckar.collections/-int-list/size.html","searchKeys":["size","open override var size: Int","io.github.aeckar.collections.IntList.size"]},{"name":"open override var size: Int","description":"io.github.aeckar.collections.LongList.size","location":"core/io.github.aeckar.collections/-long-list/size.html","searchKeys":["size","open override var size: Int","io.github.aeckar.collections.LongList.size"]},{"name":"open val children: List<Self>","description":"io.github.aeckar.collections.TreeNode.children","location":"core/io.github.aeckar.collections/-tree-node/children.html","searchKeys":["children","open val children: List<Self>","io.github.aeckar.collections.TreeNode.children"]},{"name":"operator fun V.rangeTo(childValue: V): DataTreeNode<V>","description":"io.github.aeckar.collections.DataTreeNode.rangeTo","location":"core/io.github.aeckar.collections/-data-tree-node/range-to.html","searchKeys":["rangeTo","operator fun V.rangeTo(childValue: V): DataTreeNode<V>","io.github.aeckar.collections.DataTreeNode.rangeTo"]},{"name":"operator fun get(index: Int): Boolean","description":"io.github.aeckar.collections.BooleanList.get","location":"core/io.github.aeckar.collections/-boolean-list/get.html","searchKeys":["get","operator fun get(index: Int): Boolean","io.github.aeckar.collections.BooleanList.get"]},{"name":"operator fun get(index: Int): Double","description":"io.github.aeckar.collections.DoubleList.get","location":"core/io.github.aeckar.collections/-double-list/get.html","searchKeys":["get","operator fun get(index: Int): Double","io.github.aeckar.collections.DoubleList.get"]},{"name":"operator fun get(index: Int): Int","description":"io.github.aeckar.collections.IntList.get","location":"core/io.github.aeckar.collections/-int-list/get.html","searchKeys":["get","operator fun get(index: Int): Int","io.github.aeckar.collections.IntList.get"]},{"name":"operator fun get(index: Int): Long","description":"io.github.aeckar.collections.LongList.get","location":"core/io.github.aeckar.collections/-long-list/get.html","searchKeys":["get","operator fun get(index: Int): Long","io.github.aeckar.collections.LongList.get"]},{"name":"operator fun plusAssign(element: Boolean)","description":"io.github.aeckar.collections.BooleanList.plusAssign","location":"core/io.github.aeckar.collections/-boolean-list/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(element: Boolean)","io.github.aeckar.collections.BooleanList.plusAssign"]},{"name":"operator fun plusAssign(element: Double)","description":"io.github.aeckar.collections.DoubleList.plusAssign","location":"core/io.github.aeckar.collections/-double-list/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(element: Double)","io.github.aeckar.collections.DoubleList.plusAssign"]},{"name":"operator fun plusAssign(element: Int)","description":"io.github.aeckar.collections.IntList.plusAssign","location":"core/io.github.aeckar.collections/-int-list/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(element: Int)","io.github.aeckar.collections.IntList.plusAssign"]},{"name":"operator fun plusAssign(element: Long)","description":"io.github.aeckar.collections.LongList.plusAssign","location":"core/io.github.aeckar.collections/-long-list/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(element: Long)","io.github.aeckar.collections.LongList.plusAssign"]},{"name":"operator fun plusAssign(node: DataTreeNode<V>)","description":"io.github.aeckar.collections.DataTreeNode.plusAssign","location":"core/io.github.aeckar.collections/-data-tree-node/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(node: DataTreeNode<V>)","io.github.aeckar.collections.DataTreeNode.plusAssign"]},{"name":"operator fun plusAssign(value: V)","description":"io.github.aeckar.collections.DataTreeNode.plusAssign","location":"core/io.github.aeckar.collections/-data-tree-node/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(value: V)","io.github.aeckar.collections.DataTreeNode.plusAssign"]},{"name":"operator fun rangeTo(node: DataTreeNode<V>): DataTreeNode<V>","description":"io.github.aeckar.collections.DataTreeNode.rangeTo","location":"core/io.github.aeckar.collections/-data-tree-node/range-to.html","searchKeys":["rangeTo","operator fun rangeTo(node: DataTreeNode<V>): DataTreeNode<V>","io.github.aeckar.collections.DataTreeNode.rangeTo"]},{"name":"operator fun rangeTo(value: V): DataTreeNode<V>","description":"io.github.aeckar.collections.DataTreeNode.rangeTo","location":"core/io.github.aeckar.collections/-data-tree-node/range-to.html","searchKeys":["rangeTo","operator fun rangeTo(value: V): DataTreeNode<V>","io.github.aeckar.collections.DataTreeNode.rangeTo"]},{"name":"override fun hashCode(): Int","description":"io.github.aeckar.collections.AbstractPivotIterator.hashCode","location":"core/io.github.aeckar.collections/-abstract-pivot-iterator/hash-code.html","searchKeys":["hashCode","override fun hashCode(): Int","io.github.aeckar.collections.AbstractPivotIterator.hashCode"]},{"name":"override fun here(): V","description":"io.github.aeckar.collections.AbstractPivotIterator.here","location":"core/io.github.aeckar.collections/-abstract-pivot-iterator/here.html","searchKeys":["here","override fun here(): V","io.github.aeckar.collections.AbstractPivotIterator.here"]},{"name":"override fun pivots(): List<Pivot<P, V>>","description":"io.github.aeckar.collections.AbstractPivotIterator.pivots","location":"core/io.github.aeckar.collections/-abstract-pivot-iterator/pivots.html","searchKeys":["pivots","override fun pivots(): List<Pivot<P, V>>","io.github.aeckar.collections.AbstractPivotIterator.pivots"]},{"name":"override fun toString(): String","description":"io.github.aeckar.collections.AbstractPivotIterator.toString","location":"core/io.github.aeckar.collections/-abstract-pivot-iterator/to-string.html","searchKeys":["toString","override fun toString(): String","io.github.aeckar.collections.AbstractPivotIterator.toString"]},{"name":"sealed interface ReadOnlyCollection<E> : Collection<E> ","description":"io.github.aeckar.collections.ReadOnlyCollection","location":"core/io.github.aeckar.collections/-read-only-collection/index.html","searchKeys":["ReadOnlyCollection","sealed interface ReadOnlyCollection<E> : Collection<E> ","io.github.aeckar.collections.ReadOnlyCollection"]},{"name":"sealed interface ReadOnlyDataTreeNode<V> : ValueTreeNode<V> ","description":"io.github.aeckar.collections.ReadOnlyDataTreeNode","location":"core/io.github.aeckar.collections/-read-only-data-tree-node/index.html","searchKeys":["ReadOnlyDataTreeNode","sealed interface ReadOnlyDataTreeNode<V> : ValueTreeNode<V> ","io.github.aeckar.collections.ReadOnlyDataTreeNode"]},{"name":"sealed interface ReadOnlyList<E> : ReadOnlyCollection<E> , List<E> ","description":"io.github.aeckar.collections.ReadOnlyList","location":"core/io.github.aeckar.collections/-read-only-list/index.html","searchKeys":["ReadOnlyList","sealed interface ReadOnlyList<E> : ReadOnlyCollection<E> , List<E> ","io.github.aeckar.collections.ReadOnlyList"]},{"name":"sealed interface ReadOnlyMap<K, V> : Map<K, V> ","description":"io.github.aeckar.collections.ReadOnlyMap","location":"core/io.github.aeckar.collections/-read-only-map/index.html","searchKeys":["ReadOnlyMap","sealed interface ReadOnlyMap<K, V> : Map<K, V> ","io.github.aeckar.collections.ReadOnlyMap"]},{"name":"sealed interface ReadOnlyMultiSet<E> : MultiSet<E> , ReadOnlySet<E> ","description":"io.github.aeckar.collections.ReadOnlyMultiSet","location":"core/io.github.aeckar.collections/-read-only-multi-set/index.html","searchKeys":["ReadOnlyMultiSet","sealed interface ReadOnlyMultiSet<E> : MultiSet<E> , ReadOnlySet<E> ","io.github.aeckar.collections.ReadOnlyMultiSet"]},{"name":"sealed interface ReadOnlySet<E> : Set<E> ","description":"io.github.aeckar.collections.ReadOnlySet","location":"core/io.github.aeckar.collections/-read-only-set/index.html","searchKeys":["ReadOnlySet","sealed interface ReadOnlySet<E> : Set<E> ","io.github.aeckar.collections.ReadOnlySet"]},{"name":"val ASCII: TreeNode.Style","description":"io.github.aeckar.collections.TreeNode.Companion.ASCII","location":"core/io.github.aeckar.collections/-tree-node/-companion/-a-s-c-i-i.html","searchKeys":["ASCII","val ASCII: TreeNode.Style","io.github.aeckar.collections.TreeNode.Companion.ASCII"]},{"name":"val UTF_8: TreeNode.Style","description":"io.github.aeckar.collections.TreeNode.Companion.UTF_8","location":"core/io.github.aeckar.collections/-tree-node/-companion/-u-t-f_8.html","searchKeys":["UTF_8","val UTF_8: TreeNode.Style","io.github.aeckar.collections.TreeNode.Companion.UTF_8"]},{"name":"val corner: Char","description":"io.github.aeckar.collections.TreeNode.Style.corner","location":"core/io.github.aeckar.collections/-tree-node/-style/corner.html","searchKeys":["corner","val corner: Char","io.github.aeckar.collections.TreeNode.Style.corner"]},{"name":"val horizontal: Char","description":"io.github.aeckar.collections.TreeNode.Style.horizontal","location":"core/io.github.aeckar.collections/-tree-node/-style/horizontal.html","searchKeys":["horizontal","val horizontal: Char","io.github.aeckar.collections.TreeNode.Style.horizontal"]},{"name":"val position: P","description":"io.github.aeckar.collections.Pivot.position","location":"core/io.github.aeckar.collections/-pivot/position.html","searchKeys":["position","val position: P","io.github.aeckar.collections.Pivot.position"]},{"name":"val turnstile: Char","description":"io.github.aeckar.collections.TreeNode.Style.turnstile","location":"core/io.github.aeckar.collections/-tree-node/-style/turnstile.html","searchKeys":["turnstile","val turnstile: Char","io.github.aeckar.collections.TreeNode.Style.turnstile"]},{"name":"val vertical: Char","description":"io.github.aeckar.collections.TreeNode.Style.vertical","location":"core/io.github.aeckar.collections/-tree-node/-style/vertical.html","searchKeys":["vertical","val vertical: Char","io.github.aeckar.collections.TreeNode.Style.vertical"]},{"name":"var last: Boolean","description":"io.github.aeckar.collections.BooleanList.last","location":"core/io.github.aeckar.collections/-boolean-list/last.html","searchKeys":["last","var last: Boolean","io.github.aeckar.collections.BooleanList.last"]},{"name":"var last: Double","description":"io.github.aeckar.collections.DoubleList.last","location":"core/io.github.aeckar.collections/-double-list/last.html","searchKeys":["last","var last: Double","io.github.aeckar.collections.DoubleList.last"]},{"name":"var last: Int","description":"io.github.aeckar.collections.IntList.last","location":"core/io.github.aeckar.collections/-int-list/last.html","searchKeys":["last","var last: Int","io.github.aeckar.collections.IntList.last"]},{"name":"var last: Long","description":"io.github.aeckar.collections.LongList.last","location":"core/io.github.aeckar.collections/-long-list/last.html","searchKeys":["last","var last: Long","io.github.aeckar.collections.LongList.last"]},{"name":"fun <V> RawSource.pivotIterator(init: () -> V): CharPivotIterator<*, V>","description":"io.github.aeckar.collections.pivotIterator","location":"io/io.github.aeckar.collections/pivot-iterator.html","searchKeys":["pivotIterator","fun <V> RawSource.pivotIterator(init: () -> V): CharPivotIterator<*, V>","io.github.aeckar.collections.pivotIterator"]},{"name":"fun RawSource.revertibleIterator(): CharRevertibleIterator<*>","description":"io.github.aeckar.collections.revertibleIterator","location":"io/io.github.aeckar.collections/revertible-iterator.html","searchKeys":["revertibleIterator","fun RawSource.revertibleIterator(): CharRevertibleIterator<*>","io.github.aeckar.collections.revertibleIterator"]}]